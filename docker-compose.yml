version: '3.9'

services:
  hackcu-postgres:
    container_name: hackcu-postgres
    image: postgres
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 5s
      retries: 10
      start_period: 10s
    ports:
      - 5432:5432
    volumes:
      - hackcu-database-volume:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres=value
  hackcu-migration:
    container_name: hackcu-migration
    build: ./backend
    command: alembic upgrade head
    environment:
      - DATABASE_URL=postgresql://postgres:password@hackcu-postgres:5432/postgres
    depends_on:
      hackcu-postgres:
        condition: service_healthy
    develop:
      watch:
        - action: rebuild
          path: ./backend/alembic/
  hackcu-qdrant:
    container_name: hackcu-qdrant
    image: qdrant/qdrant
    ports:
      - 6333:6333
    volumes:
      - hackcu-qdrant-volume:/qdrant
  hackcu-memcached:
    container_name: hackcu-memcached
    image: memcached
    ports:
      - 11211:11211
  hackcu-backend: 
    container_name: hackcu-backend
    build: 
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - 8000:8000
    env_file:
      - backend.env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/docs"]
      interval: 30s
      timeout: 5s
      retries: 10
      start_period: 10s
    depends_on:
      hackcu-migration:
        condition: service_completed_successfully
      hackcu-qdrant:
        condition: service_started
      hackcu-memcached:
        condition: service_started
  hackcu-frontend:
    container_name: hackcu-frontend
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    env_file:
      - frontend.env
    depends_on:
      hackcu-backend:
        condition: service_healthy
    
volumes:
  hackcu-database-volume:
  hackcu-qdrant-volume: